
var $Gbase = function(e) {
		return {
			adjustGpPadding: function(t) {
				var i = e(".GJ_Gp"),
					n = 10;
				if (e("#gf").length) {
					n += e("#gf").height()
				}
				i.css("padding-bottom", n + "px");
				var a = 0;
				if (e(".g-header").length) {
					a += e(".g-header").height()
				}
				i.css("padding-top", a + "px"), t && t()
			}
		}
	}(Zepto),
	$Common = function(e) {
		e(function() {
			$Gbase.adjustGpPadding(), e("#gh .back").on("click", function() {
				var t = e(this).attr("href");
				return "javascript:;" == t ? history.back(-1) : location.replace(t), !1
			})
		})
	}(Zepto);
var $extendFn = (function($) {
	$.extend($.fn, {
       /**
         * 日期选择器
         * @return {[type]} [description]
         */
        timepicker: function(options) {
                if (!this.length) {
                    return;
                }
                var cfg = $.extend({}, {
                    defaultValue: function() {
                        // 默认日期是当天
                        var now = new Date(),
                            defaultValue = now.getFullYear() + '-' + (now.getMonth() + 1) + '-' + (now.getDate());
                        return defaultValue;
                    },
                    minValue: '',
                    maxValue: '',
                    onSelect: function(value) {
                        // 确定的回调
                        return true;
                    }
                }, options);

                // 选择的回调
                var timeWheel = null;
                var callback = function(value) {
                    cfg.onSelect(value);
                    timeWheel = null;
                };
                // 弹出
                $(this).on('click', function() {
                    timeWheel = new ScrollWheel({
                        minValue: cfg.minValue,
                        maxValue: cfg.maxValue,
                        defaultValue: cfg.defaultValue,
                        closeCallback: callback,
                        noDays: cfg.noDays,
                        type:  cfg.type,
                        value:cfg.value,
                        slotData:cfg.slotData,
                        count:cfg.count
                    });
                    return false;
                });
            }
    });
})(Zepto);